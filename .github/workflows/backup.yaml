name: Automatically backup the lists
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * SUN"
  push:
    paths:
      - './script.ps1'
jobs:
  RunScript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Load secrets to environment variables
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
      - name: Run PowerShell script
        shell: pwsh
        run: ./script.ps1
      - name: Commit changes
        shell: pwsh
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Tell git to add all XML file to staging, ignore if file contains "Scrape failed" inside
          Get-ChildItem -Path "*" -Filter "*.xml" -File  -Recurse | ForEach-Object {
            $inside = Get-Content $_.FullName
            if ($inside -contains "Scrape failed") {
              Write-Host "Skipping file: $_"
            } else {
              git add $_.FullName
            }
          }
          Get-ChildItem -Path "*" -Exclude "*.xml" -File -Recurse | ForEach-Object {
            git add $_.FullName
          }
          git commit -m "Backup lists, $(Get-Date -AsUtc -Format 'yyyy-MM-ddTHH:mm:ssZ')"
          git push
      - name: Append Timestamp to GitHub Env
        shell: pwsh
        run: |
          $now = Get-Date -AsUtc -Format 'yyyy-MM-ddTHH:mm:ssZ'
          "NOW=$($now)" >> $GITHUB_ENV
      - name: Backup IMDb lists
        uses: jpalumickas/imdb-export-action@v1.3.0
        if: env.IMDB_EMAIL != ''
        with:
          imdb_email: ${{ env.IMDB_EMAIL }}
          imdb_password: ${{ env.IMDB_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ratings_path: "./imdb/ratings.csv"
          watchlist_path: "./imdb/watchlist.csv"
          ratings_commit_message: Update IMDb Rating List, ${{ env.NOW }}
          watchlist_commit_message: Update IMDb Watch List, ${{ env.NOW }}
